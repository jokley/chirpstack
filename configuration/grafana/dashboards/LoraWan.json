{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 1,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "datasource",
        "uid": "grafana"
      },
      "gridPos": {
        "h": 6,
        "w": 12,
        "x": 0,
        "y": 0
      },
      "id": 9,
      "options": {
        "buttonGroup": {
          "orientation": "center",
          "size": "md"
        },
        "elements": [
          {
            "id": "cmd",
            "labelWidth": 15,
            "options": [
              {
                "label": "on",
                "value": "on"
              },
              {
                "label": "off",
                "value": "off"
              },
              {
                "label": "auto",
                "value": "auto"
              }
            ],
            "section": "",
            "title": "Venti",
            "tooltip": "",
            "type": "radio",
            "unit": " ",
            "value": "off"
          },
          {
            "id": "tm",
            "labelWidth": 15,
            "max": 87,
            "min": 77,
            "section": "",
            "step": 1,
            "title": "Trockenmasse",
            "tooltip": "",
            "type": "slider",
            "unit": "%",
            "value": 87
          },
          {
            "id": "stock",
            "labelWidth": 15,
            "options": [
              {
                "label": "0",
                "value": "0"
              },
              {
                "label": "1",
                "value": "1"
              },
              {
                "label": "2",
                "value": "2"
              },
              {
                "label": "4",
                "value": "4"
              },
              {
                "label": "16",
                "value": "6"
              },
              {
                "label": "12",
                "value": "12"
              },
              {
                "label": "24",
                "value": "24"
              }
            ],
            "section": "",
            "title": "Stockaufbau",
            "tooltip": "",
            "type": "select",
            "unit": "h",
            "value": "2"
          }
        ],
        "initial": {
          "code": "console.log(data, response, initial, elements)",
          "contentType": "application/json",
          "highlight": false,
          "highlightColor": "red",
          "method": "-"
        },
        "layout": {
          "sections": [],
          "variant": "single"
        },
        "reset": {
          "backgroundColor": "purple",
          "foregroundColor": "yellow",
          "icon": "process",
          "text": "Reset",
          "variant": "hidden"
        },
        "submit": {
          "backgroundColor": "#0b90b9",
          "foregroundColor": "#000000",
          "icon": "check-circle",
          "text": "confirm",
          "variant": "custom"
        },
        "update": {
          "code": "if (response && response.ok) {\n  notifySuccess(['Update', 'Values updated successfully.']);\n  //locationService.reload();\n  //console.log(response)\n} else {\n  notifyError(['Update', 'An error occured updating values.']);\n}",
          "confirm": false,
          "contentType": "application/json",
          "header": [],
          "method": "POST",
          "updatedOnly": false,
          "url": "/backend/venti"
        }
      },
      "title": "Venti Control Settings",
      "type": "volkovlabs-form-panel"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "#09b8ff",
            "mode": "fixed"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 12,
        "y": 0
      },
      "id": 14,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "vertical",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^mode$/",
          "values": false
        },
        "textMode": "value"
      },
      "pluginVersion": "9.2.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"jokley_bucket\")\r\n                    |> range(start: -30d)\r\n                    |> filter(fn: (r) => r[\"_measurement\"] == \"venti\")\r\n                    |> filter(fn: (r) => r[\"_field\"] == \"mode\")\r\n\t\t                |> last()\r\n    \r\n",
          "refId": "A"
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "#09b8ff",
            "mode": "fixed"
          },
          "decimals": 1,
          "displayName": "${__field.name}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ns"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 9,
        "x": 15,
        "y": 0
      },
      "id": 15,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "vertical",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "value_and_name"
      },
      "pluginVersion": "9.2.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"jokley_bucket\")\r\n  |> range(start: -2d)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"venti\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"stockaufbau\")\r\n  |> last()\r\n  |> map(fn: (r) => ({ r with Stockaufbau: if (uint(v: r._value) * uint(v: 3600000000000)) -(uint(v: now()) - uint(v: r._time))  >=0  and (uint(v: r._value) * uint(v: 3600000000000)) -(uint(v: now()) - uint(v: r._time))  <= 1844674388946713400 then (uint(v: r._value) * uint(v: 3600000000000)) -(uint(v: now()) - uint(v: r._time))  else uint(v: 0)}))\r\n  |> yield(name: \"last\")",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "hide": false,
          "query": "from(bucket: \"jokley_bucket\")\r\n  |> range(start: -2d)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"fan\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"device_frmpayload_data_RO1_status\")\r\n  |> filter(fn: (r) => r[\"_value\"] == \"OFF\")\r\n  |> last()\r\n  |> map(fn: (r) => ({ r with ON: if uint(v: now()) - uint(v: r._time) >= uint(v: 600000000000) then uint(v: now()) - uint(v: r._time) else uint(v: 0)}))\r\n  |> yield(name: \"last\")",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "hide": false,
          "query": "from(bucket: \"jokley_bucket\")\r\n  |> range(start: -2d)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"fan\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"device_frmpayload_data_RO1_status\")\r\n  |> filter(fn: (r) => r[\"_value\"] == \"ON\")\r\n  |> last()\r\n  |> map(fn: (r) => ({ r with OFF: if uint(v: now()) - uint(v: r._time) >= uint(v: 600000000000) then uint(v: now()) - uint(v: r._time) else uint(v: 0)}))\r\n  |> yield(name: \"last\")",
          "refId": "C"
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-BlPu"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 53,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "device_frmpayload_data_Hum_SHT value {application_name=\"jokley\", dev_eui=\"a8404137e186804e\", device_name=\"outdoor\", f_port=\"2\"}"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Humidity"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "device_frmpayload_data_TempC_SHT value {application_name=\"jokley\", dev_eui=\"a8404137e186804e\", device_name=\"outdoor\", f_port=\"2\"}"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Temperature"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 3
      },
      "id": 2,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"jokley_bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"outdoor\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"device_frmpayload_data_TempC_SHT\" or r[\"_measurement\"] == \"device_frmpayload_data_Hum_SHT\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Outdoor Temp/Humi",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "#19d2ff",
            "mode": "fixed"
          },
          "custom": {
            "fillOpacity": 50,
            "lineWidth": 1,
            "spanNulls": false
          },
          "displayName": "Fan",
          "mappings": [
            {
              "options": {
                "ON": {
                  "color": "#d83f3f",
                  "index": 0,
                  "text": "ON"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 12,
        "x": 0,
        "y": 6
      },
      "id": 4,
      "options": {
        "alignValue": "center",
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "mergeValues": true,
        "rowHeight": 0.9,
        "showValue": "auto",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "9.2.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"jokley_bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"fan\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"device_frmpayload_data_RO1_status\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Fan ON/OFF",
      "type": "state-timeline"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-BlPu"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 53,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "device_frmpayload_data_humidity value {application_name=\"jokley\", dev_eui=\"04084b774a4c8e66\", device_name=\"probe01\", f_port=\"2\"}"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Humidity_01"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "#2027dc",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "device_frmpayload_data_humidity value {application_name=\"jokley\", dev_eui=\"1e58b2a3fc9f5b17\", device_name=\"probe02\", f_port=\"2\"}"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Humidity_02"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "#105ddc",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "device_frmpayload_data_temperature value {application_name=\"jokley\", dev_eui=\"04084b774a4c8e66\", device_name=\"probe01\", f_port=\"2\"}"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Temperature_01"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "#bf1ce9",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "device_frmpayload_data_temperature value {application_name=\"jokley\", dev_eui=\"1e58b2a3fc9f5b17\", device_name=\"probe02\", f_port=\"2\"}"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Temperature_02"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "#771c3c",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "device_frmpayload_data_trockenmasse value {application_name=\"jokley\", dev_eui=\"04084b774a4c8e66\", device_name=\"probe01\", f_port=\"2\"}"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Trockenmasse_01"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "#0edad9",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.axisPlacement",
                "value": "right"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "device_frmpayload_data_trockenmasse value {application_name=\"jokley\", dev_eui=\"1e58b2a3fc9f5b17\", device_name=\"probe02\", f_port=\"2\"}"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Trockenmasse_02"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "#09dabe",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.axisPlacement",
                "value": "right"
              }
            ]
          },
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "Trockenmasse_02",
                  "Trockenmasse_01"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 10
      },
      "id": 5,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"jokley_bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"probe01\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"device_frmpayload_data_temperature\" or r[\"_measurement\"] == \"device_frmpayload_data_humidity\" or r[\"_measurement\"] == \"device_frmpayload_data_trockenmasse\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "hide": false,
          "query": "from(bucket: \"jokley_bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"probe02\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"device_frmpayload_data_temperature\" or r[\"_measurement\"] == \"device_frmpayload_data_humidity\" or r[\"_measurement\"] == \"device_frmpayload_data_trockenmasse\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "B"
        }
      ],
      "title": "Probe Temp / Humi / TS",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "#08c6f3",
            "mode": "fixed"
          },
          "decimals": 2,
          "mappings": [],
          "max": 4200,
          "min": 3000,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "mvolt"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "value {application_name=\"jokley\", dev_eui=\"04084b774a4c8e66\", device_name=\"probe01\", f_port=\"2\"}"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Probe 01"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "value {application_name=\"jokley\", dev_eui=\"1e58b2a3fc9f5b17\", device_name=\"probe02\", f_port=\"2\"}"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Probe 02"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 10
      },
      "id": 7,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "text": {}
      },
      "pluginVersion": "9.2.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"jokley_bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"probe01\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"device_frmpayload_data_battery\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "Probe_01"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "hide": false,
          "query": "from(bucket: \"jokley_bucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"probe02\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"device_frmpayload_data_battery\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "Probe_02"
        }
      ],
      "title": "Battery Status",
      "type": "gauge"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 17
      },
      "id": 17,
      "panels": [],
      "title": "Values",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-BlPu"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "device_frmpayload_data_Hum_SHT value {application_name=\"jokley\", dev_eui=\"a8404137e186804e\", device_name=\"outdoor\", f_port=\"2\"}"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Humidity"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "device_frmpayload_data_TempC_SHT value {application_name=\"jokley\", dev_eui=\"a8404137e186804e\", device_name=\"outdoor\", f_port=\"2\"}"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Temperature"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 5,
        "x": 0,
        "y": 18
      },
      "id": 13,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "value"
      },
      "pluginVersion": "9.2.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"jokley_bucket\")\r\n  |> range(start: -10h)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"outdoor\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"device_frmpayload_data_TempC_SHT\" or r[\"_measurement\"] == \"device_frmpayload_data_Hum_SHT\"  or r[\"_measurement\"] == \"device_frmpayload_data_TS_SHT\" or r[\"_measurement\"] == \"device_frmpayload_data_SDef_SHT\")\r\n  |> last()\r\n\r\n  \r\n    \r\n",
          "refId": "A"
        }
      ],
      "title": "Outdoor Temp/Humi",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-BlPu"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 10,
        "x": 5,
        "y": 18
      },
      "id": 10,
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "text": {},
        "textMode": "value"
      },
      "pluginVersion": "9.2.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "hide": false,
          "query": "tmin = from(bucket: \"jokley_bucket\")\r\n                |> range(start: -10m)\r\n                |> filter(fn: (r) => r[\"device_name\"] == \"probe01\" or r[\"device_name\"] == \"probe02\")\r\n                |> filter(fn: (r) =>  r[\"_measurement\"] == \"device_frmpayload_data_temperature\" or r[\"_measurement\"] == \"device_frmpayload_data_humidity\"  or r[\"_measurement\"] == \"device_frmpayload_data_trockenmasse\" or r[\"_measurement\"] == \"device_frmpayload_data_sdef\" )\r\n                |> last()\r\n                |> group(columns: [\"_measurement\"])\r\n                |> min()\r\n\r\ntmax = from(bucket: \"jokley_bucket\")\r\n                |> range(start: -10m)\r\n                |> filter(fn: (r) => r[\"device_name\"] == \"probe01\" or r[\"device_name\"] == \"probe02\")\r\n                |> filter(fn: (r) =>  r[\"_measurement\"] == \"device_frmpayload_data_temperature\" or r[\"_measurement\"] == \"device_frmpayload_data_humidity\"  or r[\"_measurement\"] == \"device_frmpayload_data_trockenmasse\" or r[\"_measurement\"] == \"device_frmpayload_data_sdef\" )\r\n                |> last()\r\n                |> group(columns: [\"_measurement\"])\r\n                |> max()\r\n\r\nunion(tables: [tmin, tmax])\r\n  |> sort(columns: [\"_measurement\", \"_value\"])",
          "refId": "A"
        }
      ],
      "title": "Probe min/max  Humidity - Temperature - Trockenmasse",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "super-light-green",
            "mode": "fixed"
          },
          "decimals": 1,
          "displayName": "Fan",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ns"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 15,
        "y": 18
      },
      "id": 18,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "vertical",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "value"
      },
      "pluginVersion": "9.2.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"jokley_bucket\")\r\n  |> range(start: -2d)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"venti\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"stockaufbau\")\r\n  |> last()\r\n  |> map(fn: (r) => ({ r with time_since_event: if (uint(v: r._value) * uint(v: 3600000000000)) -(uint(v: now()) - uint(v: r._time))  >=0  and (uint(v: r._value) * uint(v: 3600000000000)) -(uint(v: now()) - uint(v: r._time))  <= 1844674388946713400 then (uint(v: r._value) * uint(v: 3600000000000)) -(uint(v: now()) - uint(v: r._time))  else uint(v: 0)}))\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Stockaufbau",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "#19d2ff",
            "mode": "fixed"
          },
          "decimals": 1,
          "displayName": "Fan",
          "mappings": [
            {
              "options": {
                "ON": {
                  "color": "#d83f3f",
                  "index": 0,
                  "text": "ON"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ns"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 18,
        "y": 18
      },
      "id": 12,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "vertical",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "value"
      },
      "pluginVersion": "9.2.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"jokley_bucket\")\r\n  |> range(start: -2d)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"fan\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"device_frmpayload_data_RO1_status\")\r\n  |> filter(fn: (r) => r[\"_value\"] == \"ON\")\r\n  |> last()\r\n  |> map(fn: (r) => ({ r with time_since_event: if uint(v: now()) - uint(v: r._time) >= uint(v: 600000000000) then uint(v: now()) - uint(v: r._time) else uint(v: 0)}))\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Venti off",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "super-light-red",
            "mode": "fixed"
          },
          "decimals": 1,
          "displayName": "Fan",
          "mappings": [
            {
              "options": {
                "ON": {
                  "color": "#d83f3f",
                  "index": 0,
                  "text": "ON"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ns"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 21,
        "y": 18
      },
      "id": 11,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "vertical",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "value"
      },
      "pluginVersion": "9.2.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"jokley_bucket\")\r\n  |> range(start: -2d)\r\n  |> filter(fn: (r) => r[\"device_name\"] == \"fan\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"device_frmpayload_data_RO1_status\")\r\n  |> filter(fn: (r) => r[\"_value\"] == \"OFF\")\r\n  |> last()\r\n  |> map(fn: (r) => ({ r with time_since_event: if uint(v: now()) - uint(v: r._time) >= uint(v: 600000000000) then uint(v: now()) - uint(v: r._time) else uint(v: 0)}))\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Venti on",
      "type": "stat"
    }
  ],
  "refresh": "5s",
  "schemaVersion": 37,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-30m",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "LoraWan",
  "uid": "TilQz124z",
  "version": 108,
  "weekStart": ""
}